# Deployment through Github Actions for Bedrock/Sage.
# 
# Placed at: .github/workflow/deploy.yml
#
# Process should be studied from code, but some quick brief:
#  - runs composer / sage installation
#  - moves correct `.env.*` file for multiple configs
#  - uses rsync to sync files, uses /.rsyncignore file to exclude whatever should not be there
#  - symlinks uploads folder and symlink release folder to kinsta public hostname
#  - if you want to clear cache, please uncomment the last line

name: Build & Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_PORT: 22
      SSH_HOST:  ${{ secrets.SSH_HOST }}
      SSH_KEY: ${{ secrets.SSH_KEY }} 
      KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }} # Known hosts information about your server
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }} 
      WEB_ROOT: /var/www/roots
      ENV: development # Moves .env.<VALUE> to use as config


    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 'latest'
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 'latest'

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ env.SSH_KEY }}
        name: id_rsa # optional
        known_hosts: ${{ env.KNOWN_HOSTS }}
        if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer update && composer install --prefer-dist --no-progress --no-dev

    # build sage based theme (remove if not used)
    - name: Install theme PHP dependencies
      run: cd web/app/themes/sage && composer install --prefer-dist --no-progress --no-dev

    - name: Install and build JS dependencies
      run: cd web/app/themes/sage && npm install && npm run build


    - name: Create Release Dir On Remote
      run: ssh -o StrictHostKeyChecking=no ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }} -p ${{ env.SSH_PORT }} 'mkdir -p ${{ env.WEB_ROOT }}deploy/${{ github.sha }}'

    - name: Push files to the remote
      run: rsync -avz -e 'ssh -p ${{ env.SSH_PORT }}' --exclude-from=.rsyncignore ./ ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }}:${{ env.WEB_ROOT }}deploy/${{ github.sha }}

    - name: Ensure shared symlinks
      run: |
        ssh ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }} -p ${{ env.SSH_PORT }} 'mkdir -p ${{ env.WEB_ROOT }}private/shared/uploads && ln -sfn ${{ env.WEB_ROOT }}private/shared/uploads ${{ env.WEB_ROOT }}deploy/${{ github.sha }}/web/app/uploads'

    - name: Promote production symlink
      run: ssh ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }} -p ${{ env.SSH_PORT }} 'ln -sfn ${{ env.WEB_ROOT }}deploy/${{ github.sha }}/web ${{ env.WEB_ROOT }}public'